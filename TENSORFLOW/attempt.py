# -*- coding: utf-8 -*-
"""tensorflow

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YIvAyHvlZx1Al6xhnpk5QcRJU-0HXj6n
"""

# 20190909
import tensorflow as tf


print(tf.__version__)
a = tf.constant([1, 2, 3])
b = tf.constant([4, 5, 6])
print(a+b)
sess = tf.Session()
print(sess.run(a+b))
print(a.graph is tf.get_default_graph())

g1 = tf.Graph()
with g1.as_default():
    a = tf.get_variable("a", [2], initializer=tf.zeros_initializer())
    b = tf.get_variable("b", [2], initializer=tf.ones_initializer())
    
g2 = tf.Graph()
with g2.as_default():
    a = tf.get_variable("a", [2], initializer=tf.ones_initializer())
    b = tf.get_variable("b", [2], initializer=tf.zeros_initializer())
    
with tf.Session(graph=g1) as sess:
    tf.global_variables_initializer().run()
    with tf.variable_scope("", reuse=True):
        print("g1 - a", sess.run(tf.get_variable("a")))
        print("g1 - b", sess.run(tf.get_variable("b")))
        
with tf.Session(graph=g2) as sess:
    tf.global_variables_initializer().run()
    with tf.variable_scope("", reuse=True):
        print("g2 - a", sess.run(tf.get_variable("a")))
        print("g2 - b", sess.run(tf.get_variable("b")))

# 20190910
import tensorflow as tf


a = tf.constant([1])
b = tf.constant([1, 2, 3])
print(a)
# print(a.eval())
with tf.Session() as sess:
    print(b.eval())
    print(sess.run(b))

config = tf.ConfigProto(log_device_placement=True, allow_soft_placement=True)
sess1 = tf.Session(config=config)
sess2 = tf.InteractiveSession(config=config)
sess1.close()
sess2.close()

a = tf.placeholder(tf.float32, shape=(2), name="input")
b = tf.placeholder(tf.float32, shape=(2), name="input")
result = a+b
with tf.Session() as sess:
    c = sess.run(result, feed_dict={a:[1.0, 2.0], b:[3.0, 4.0]})
    print(c)

weights = tf.Variable(tf.random_normal([3, 4], stddev=1))
weights2 = tf.Variable(tf.truncated_normal([3, 4], stddev=1))
with tf.Session() as sess:
#     init_op = tf.initialize_all_variables()
#     sess.run(init_op)
    tf.global_variables_initializer().run()
    print("weights", weights.eval())
    weight = sess.run(weights2)
    print("weights2", weight)

# 20190911
import tensorflow as tf


v1 = tf.Variable(tf.constant([1.0]))
v2 = tf.get_variable("q", [1], initializer=tf.constant_initializer(1.0))
print(v2.name)
with tf.Session() as sess:
    tf.initialize_all_variables().run()
    with tf.variable_scope("one", reuse=True):
        print("v1", sess.run(v1))
        print("v2", v2)

with tf.variable_scope("two", reuse=True):
    x = tf.get_variable("x", [1], initializer=tf.constant_initializer(1.0))
    with tf.Session() as sess:
        tf.global_variables_initializer().run()
        print(x)
        print(x.eval())

variable = tf.get_variable("variable", [1], initializer=tf.constant_initializer(1.0))
print(variable.name)

with tf.variable_scope("vv7"):
    vv5 = tf.get_variable("variable", [1], initializer=tf.constant_initializer(1.0))
    print(vv5.name)
    
with tf.variable_scope("vv7"):
    with tf.variable_scope("vv9"):
        vv11 = tf.get_variable("variable", [1])
        print(vv11.name)

class Graph:
    def __init__(self):
        pass